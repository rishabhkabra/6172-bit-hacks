1) Ben Bitdiddle's implementation: 49.579371s
2) Rotate via reversal implemention: 0.001699s --- 29181x
3) Reverse using character operations and bit hacks: 0.000320s --- 5.31x
4) Using unsigned long instead of char as the base word type for the bitarray buf: 0.000141s --- 2.27x (after bug fix)
5) Added lookup tables for bitmasks used in bitarray_reverse_on_steroids instead of using standard bit shifts: 0.000134s --- 1.05x

Unfruitful attempts:
- using int as WORD instead of long. longs were clearly faster.
- using pointer accesses instead of array indexing especially in reverse_unsigned_long. clear performance hit.
- using a lookup table for single_one_bitmask() doesn't yield any gain (expected cause the method isn't called by our code).
- using an extended lookup table for reverse_unsigned_long to save on the bit shifts performed on every reversed char value. defined the table externally by meta-programming. no performance gain.
